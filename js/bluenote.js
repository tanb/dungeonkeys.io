// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $('document').ready(function() {
    $('html, body').css({
      'width': '100%',
      'height': '100%',
      'position': 'absolute'
    });
    window._$elm = $('body');
    window._subviews = [];
    window.superview = null;
    return window.addSubview = function(view) {
      window._$elm.append(view._$elm);
      window._subviews.push(view);
      return view.superview = window;
    };
  });

  Function.prototype.property = function(prop, desc) {
    return Object.defineProperty(this.prototype, prop, desc);
  };

  Object.defineProperty(window, 'subviews', {
    get: function() {
      return window._subviews;
    },
    set: function() {}
  });

  this.BNView = (function() {
    function BNView() {
      this._$elm = $('<div />');
      this._$elm.addClass(this.constructor.name);
      this._subviews = [];
      this._$elm.css({
        position: 'absolute'
      });
      this.superview = null;
    }

    BNView.property('frame', {
      get: function() {
        var frame, origin;
        origin = this._$elm.offset();
        frame = {
          x: origin.left,
          y: origin.top,
          width: this._$elm.outerWidth(),
          height: this._$elm.outerHeight()
        };
        return frame;
      },
      set: function(frame) {
        this._$elm.css({
          left: frame.x + "px",
          top: frame.y + "px"
        });
        this._$elm.outerWidth(frame.width);
        return this._$elm.outerHeight(frame.height);
      }
    });

    BNView.prototype.addSubview = function(view) {
      this._$elm.append(view._$elm);
      this._subviews.push(view);
      return view.superview = this;
    };

    BNView.property('subviews', {
      get: function() {
        return this._subviews;
      },
      set: function() {}
    });

    BNView.prototype.layoutSubviews = function() {
      return $.each(this._subviews, function(idx, view) {
        return view.layoutSubviews;
      });
    };

    return BNView;

  })();

  this.BNImageView = (function(_super) {
    __extends(BNImageView, _super);

    function BNImageView() {
      BNImageView.__super__.constructor.apply(this, arguments);
      this._$img = $('<img />');
      this._$elm.append(this._$img);
      this._circularize = false;
    }

    BNImageView.property('src', {
      get: function() {
        return this._$img.attr('src');
      },
      set: function(src) {
        return this._$img.attr('src', src);
      }
    });

    BNImageView.property('frame', {
      get: function() {
        return BNImageView.__super__.__lookupGetter__('frame').apply(this, arguments);
      },
      set: function(frame) {
        BNImageView.__super__.__lookupSetter__('frame').apply(this, arguments);
        return this._$img.css({
          'width': frame.width,
          'height': frame.height
        });
      }
    });

    BNImageView.property('circularize', {
      get: function() {
        return this._circularize;
      },
      set: function(bool) {
        this._circularize = bool;
        if (bool) {
          return this._$img.css({
            'border-radius': '100%'
          });
        } else {
          return this._$img.css({
            'border-radius': '0%'
          });
        }
      }
    });

    return BNImageView;

  })(BNView);

  this.BNViewController = (function() {
    function BNViewController() {
      this._view = null;
    }

    BNViewController.property('view', {
      get: function() {
        if (this._view) {
          return this._view;
        }
        this.loadView();
        this.viewDidLoad();
        return this._view;
      },
      set: function(view) {
        view._$elm.css({
          'position': 'absolute',
          'top': 0,
          'left': 0,
          'width': $(window).outerWidth(),
          'height': $(window).outerHeight()
        });
        return this._view = view;
      }
    });

    BNViewController.prototype.loadView = function() {
      this._view = new BNView();
      return this._view._$elm.css({
        'position': 'absolute',
        'top': 0,
        'left': 0,
        'width': $(window).outerWidth(),
        'height': $(window).outerHeight()
      });
    };

    BNViewController.prototype.viewDidLoad = function() {
      return this.layoutSubviews();
    };

    BNViewController.prototype.layoutSubviews = function() {
      var frame;
      frame = this._view.frame;
      frame.width = $(window).outerWidth();
      frame.height = $(window).outerHeight();
      this._view.frame = frame;
      return this._view.layoutSubviews();
    };

    return BNViewController;

  })();

  this.BNControl = (function(_super) {
    __extends(BNControl, _super);

    function BNControl() {
      BNControl.__super__.constructor.apply(this, arguments);
      this.enabled = true;
      this.selected = false;
    }

    return BNControl;

  })(BNView);

  this.BNButton = (function(_super) {
    __extends(BNButton, _super);

    function BNButton() {
      BNButton.__super__.constructor.apply(this, arguments);
      this._$elm.addClass('btn btn-default');
    }

    BNButton.prototype.setTitle = function(title) {
      return this._$elm.text(title);
    };

    return BNButton;

  })(BNControl);

}).call(this);
