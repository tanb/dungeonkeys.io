// Generated by CoffeeScript 1.6.3
(function() {
  var MainView, MainViewController, MobileFirstView, RootViewController, SubViewController,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MainView = (function(_super) {
    __extends(MainView, _super);

    function MainView() {
      MainView.__super__.constructor.apply(this, arguments);
    }

    MainView.prototype.layoutSubviews = function() {
      return MainView.__super__.layoutSubviews.apply(this, arguments);
    };

    return MainView;

  })(BNView);

  MobileFirstView = (function(_super) {
    __extends(MobileFirstView, _super);

    function MobileFirstView() {
      var frame;
      MobileFirstView.__super__.constructor.apply(this, arguments);
      this.imageView = new BNImageView();
      frame = {
        x: 0,
        y: 0,
        width: 45,
        height: 45
      };
      this.imageView.frame = frame;
      this.imageView.src = '/img/logo.png';
      this.imageView.circularize = true;
      this.addSubview(this.imageView);
    }

    MobileFirstView.prototype.layoutSubviews = function() {
      var imgFrame, imgX, imgY;
      MobileFirstView.__super__.layoutSubviews.apply(this, arguments);
      imgFrame = this.imageView.frame;
      imgX = (this.frame.width - imgFrame.width) / 2;
      imgY = (this.frame.height - imgFrame.height) / 2;
      imgFrame.x = imgX;
      imgFrame.y = imgY;
      return this.imageView.frame = imgFrame;
    };

    return MobileFirstView;

  })(BNView);

  SubViewController = (function(_super) {
    __extends(SubViewController, _super);

    function SubViewController(firstViewController) {
      SubViewController.__super__.constructor.call(this, firstViewController);
    }

    SubViewController.prototype.loadView = function() {
      SubViewController.__super__.loadView.apply(this, arguments);
      return this.view.frame = {
        x: 0,
        y: 0,
        width: 320,
        height: 568
      };
    };

    return SubViewController;

  })(BNNavigationController);

  MainViewController = (function(_super) {
    __extends(MainViewController, _super);

    function MainViewController() {
      MainViewController.__super__.constructor.apply(this, arguments);
    }

    MainViewController.prototype.loadView = function() {
      var githubBtn;
      MainViewController.__super__.loadView.apply(this, arguments);
      this.view = new MobileFirstView();
      githubBtn = new BNButton();
      githubBtn.setTitle("tanB's Github Profile");
      githubBtn.frame = {
        x: 0,
        y: 0,
        width: 160,
        height: 35
      };
      return this._rightBarButton = githubBtn;
    };

    MainViewController.prototype.viewDidLoad = function() {
      MainViewController.__super__.viewDidLoad.apply(this, arguments);
      return this._rightBarButton._$elm.bind('click', function(event) {
        return location.href = 'http://github.com/tanb';
      });
    };

    return MainViewController;

  })(BNViewController);

  RootViewController = (function(_super) {
    __extends(RootViewController, _super);

    function RootViewController() {
      var firstViewController;
      RootViewController.__super__.constructor.apply(this, arguments);
      firstViewController = new MainViewController();
      this.subViewController = new SubViewController(firstViewController);
    }

    RootViewController.prototype.loadView = function() {
      var myView;
      RootViewController.__super__.loadView.apply(this, arguments);
      myView = new MainView();
      this.view = myView;
      this.mobileView = this.subViewController.view;
      this.mobileView.clipsToBounds = true;
      this.mobileView._$elm.css({
        'border-radius': 5,
        'border': '1px solid #ccc'
      });
      return this.view.addSubview(this.mobileView);
    };

    RootViewController.prototype.viewDidLoad = function() {
      return RootViewController.__super__.viewDidLoad.apply(this, arguments);
    };

    RootViewController.prototype.didResizeWindow = function(event) {
      return this.layoutSubviews();
    };

    RootViewController.prototype.layoutSubviews = function() {
      var frame, x, y;
      RootViewController.__super__.layoutSubviews.apply(this, arguments);
      x = (this.view.frame.width - this.mobileView.frame.width) / 2;
      y = (this.view.frame.height - this.mobileView.frame.height) / 2;
      frame = this.mobileView.frame;
      frame.x = x;
      frame.y = y;
      this.mobileView.frame = frame;
      return this.subViewController.layoutSubviews();
    };

    return RootViewController;

  })(BNViewController);

  $(document).ready(function() {
    window.rootViewController = new RootViewController();
    return window.addSubview(window.rootViewController.view);
  });

}).call(this);
